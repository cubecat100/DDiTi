package kr.or.ddit.controller;

import java.util.ArrayList;
import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.entity.ServiceResult;
import kr.or.ddit.service.IBoardService;
import kr.or.ddit.service.IUnivManagementService;
import kr.or.ddit.service.IWidgetService;
import kr.or.ddit.vo.BoardVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.UnivScheduleVO;
import kr.or.ddit.vo.WidgetVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/")
public class MainpageController {

	@Inject
	private IBoardService boardService;
	@Inject
	private IUnivManagementService univService;
	@Inject
	private IWidgetService widgetService;
	
	
	// 마이페이지 + 위젯
	// 위젯 정보 저장
	
	// 이 밑으로 구현 ============================================

	// 메인페이지 + 위젯(처음 생성해줄때 사용)
	@GetMapping("/student/mainpage.do")
	public String mainPageStd(Model model, HttpServletRequest request) throws Exception {
		log.info("mainPageStd() run...");
		HttpSession session = request.getSession();
		MemberVO member = (MemberVO) session.getAttribute("member");
		
		if(member == null) {
			return "redirect:/login.do";
		}
		
		List<WidgetVO> widgetList = widgetService.widgetList(member.getMemNo());

		if (widgetList == null || widgetList.size() == 0) {
			log.info("신입 등장");

			List<WidgetVO> widget = new ArrayList<>();
			if (!member.getMemRole().equals("ROL003")) { // 관리자에는 수강시간표 위젯이 없음
				widget.add(new WidgetVO(member.getMemNo(), 0, 0, 7, 3, null, "WID001"));
			}
			widget.add(new WidgetVO(member.getMemNo(), 7, 0, 5, 3, null, "WID002"));
			widget.add(new WidgetVO(member.getMemNo(), 0, 3, 6, 3, null, "WID003"));
			widget.add(new WidgetVO(member.getMemNo(), 6, 3, 6, 3, null, "WID004"));

			ServiceResult res = widgetService.createWidget(widget);

			widgetList = widgetService.widgetList(member.getMemNo());
		} else {
			log.info("widget not empty...");
			log.info("w : " + widgetList);
		}

		model.addAttribute("member", member);
		model.addAttribute("widgetList", widgetList);

		return "student/mainpage";
	}

	@GetMapping("/professor/mainpage.do")
	public String mainPagePro(Model model) {
		return "professor/mainpage";
	}

	@GetMapping("/employer/mainpage.do")
	public String mainPageEmp(Model model) {
		return "employer/mainpage";
	}

	// 공지사항 위젯 비동기
	@GetMapping("/mainpage.do/notice")
	@ResponseBody
	public List<BoardVO> noticeWidget() {
		log.info("공지사항 위젯");
		List<BoardVO> noticeList = boardService.noticeWidget();

		return noticeList;
	}

	// 학사일정 위젯 비동기
	@GetMapping("/mainpage.do/univSchedule")
	@ResponseBody
	public List<UnivScheduleVO> univScheduleWidget() {

		log.info("학사일정 위젯");
		List<UnivScheduleVO> univScheduleList = univService.univScheduleWidget();

		return univScheduleList;
	}

	// 포틀릿 비동기 메소드
	@PutMapping("/mainpage.do/updateWidget")
	public int updateWidget(@RequestBody List<WidgetVO> widgetList) {
		return widgetService.updateWidget(widgetList);
	}

	// 포틀릿 테스트임
	@GetMapping("/student/mainpage2")
	public String mainPageStd2(Model model) {
		return "student/mainpage2";
	}
}
