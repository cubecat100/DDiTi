package kr.or.ddit.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import kr.or.ddit.entity.ServiceResult;
import kr.or.ddit.service.IUnivManagementService;
import kr.or.ddit.vo.CalendarVO;
import kr.or.ddit.vo.UnivScheduleVO;


@Controller
public class UnivManagementController {
	
	// 신고목록, 셔틀버스, 학사일정 등	
	
	// 신고 목록
	// 신고 작성
	
	// 셔틀 버스 정보
	// 셔틀버스 정보 업로드
	
	// 학사일정 목록
	// 학사일정 추가
	
	// 온라인 증명서
	// 온라인 증명서 발급
	
	// 이 밑으로 구현 ============================================
	
	@Inject
	private IUnivManagementService univService;
	
	// 공유시간표Test
	@GetMapping("/share.do")
	public String shareSchedule(Model model) {
		return "test/shareSchedule";
	}
	
	// 학사일정 조회(리스트)
	@GetMapping("/univSchedule.do")
	public String univSchedule(Model model) {
		List<UnivScheduleVO> univScheduleList = univService.univSchedule();	
		model.addAttribute("univScheduleList", univScheduleList);		
		return "employer/univSchedule";
	}
	
	// 학사일정 조회(캘린더)
	@ResponseBody
	@RequestMapping(value="/scheduleList.do", method = RequestMethod.POST)
	public List<CalendarVO> selectScheduleList(){
		List<UnivScheduleVO> univScheduleList = univService.univSchedule();
		List<CalendarVO> calendarList = null;
		if(univScheduleList != null && univScheduleList.size() > 0) {
			calendarList = new ArrayList<CalendarVO>();
			for(int i = 0; i < univScheduleList.size(); i++) {
				UnivScheduleVO univVO = univScheduleList.get(i);
				CalendarVO calendarVO = new CalendarVO();
				calendarVO.setStart(univVO.getUnivSchStartDate().replace(" ", "T"));
				calendarVO.setEnd(univVO.getUnivSchEndDate().replace(" ", "T"));
				calendarVO.setClassName("bg-success");
				calendarVO.setTitle(univVO.getUnivSchName());
				calendarList.add(calendarVO);
				//System.out.println("getStart" + calendarVO.getStart());
				//System.out.println("getEnd" + calendarVO.getEnd());
			}
		}
		return calendarList;
	}
	
	/* 아작스 실패!!
	// 학사일정 수정
	@ResponseBody
	@PutMapping("/employer/updateSchedule.do")
	public int updateSchedule(@RequestBody UnivScheduleVO univScheduleVO) {
		System.out.println("update" + univScheduleVO.getUnivSchName());
		return univService.updateSchedule(univScheduleVO);
	}
	*/
	
	// 학사일정 생성
	@PostMapping("/employer/addSchedule.do")
	public String addSchedule(UnivScheduleVO scheduleVO, RedirectAttributes ra, HttpServletRequest req, Model model) {
		String goPage = "";
		System.out.println("getUnivSchNo" + scheduleVO.getUnivSchNo());
		System.out.println("getUnivSchName" + scheduleVO.getUnivSchName());
		
		// 등록자=관리자 지정
		String admin = scheduleVO.getUnivSchReg();
		admin = "관리자";
		scheduleVO.setUnivSchReg(admin);		
		
		// 에러 등록
		Map<String, String> errors = new HashMap<String, String>();
		if(StringUtils.isBlank(scheduleVO.getUnivSchName()))
		{
			errors.put("scheduleTitle", "제목을 입력해주세요.");
		}
		if(errors.size()>0)
		{
			model.addAttribute("errors", errors);
			model.addAttribute("scheduleVO", scheduleVO);
			goPage = "employer/univSchedule";
		}
		// 정상 등록
		else
		{
		
			ServiceResult result = univService.addSchedule(req, scheduleVO);
			if(result.equals(ServiceResult.OK))
			{
				ra.addFlashAttribute("message", "일정이 등록되었습니다.");
				goPage = "redirect:/univSchedule.do";
			}else
			{
				model.addAttribute("scheduleVO", scheduleVO);
				model.addAttribute("message", "일정 등록 실패, 다시 시도해주세요!");
				goPage = "employer/univSchedule";
			}
		}
		return goPage;
	}
	
	// 학사일정 수정
	@PostMapping("/employer/updateSchedule.do")
	public String updateSchedule1(UnivScheduleVO scheduleVO, Model model) {
		scheduleVO.setUnivSchReg("관리자");
		int status = univService.updateSchedule1(scheduleVO);
		return "redirect:/univSchedule.do";
	}
	
	// 학사일정 삭제
	@DeleteMapping("/employer/deleteSchedule.do")
	public String deleteSchedule() {
		return "";
	}
	

	
	
	
	
	
	
}


