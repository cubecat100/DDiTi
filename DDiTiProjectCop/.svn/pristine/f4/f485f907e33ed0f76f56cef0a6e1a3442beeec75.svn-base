package kr.or.ddit.controller;
import java.util.Date;
import java.util.List;
import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import org.apache.commons.lang.StringUtils;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import kr.or.ddit.service.IClassService;
import kr.or.ddit.vo.BoardVO;
import kr.or.ddit.vo.ClassBoardVO;
import kr.or.ddit.vo.ClassVO;
import kr.or.ddit.vo.ExampleVO;
import kr.or.ddit.vo.HomeworkVO;
import kr.or.ddit.vo.ListenerVO;
import kr.or.ddit.vo.MemberVO;
import kr.or.ddit.vo.MyClassVO;
import kr.or.ddit.vo.PaginationVO;
import kr.or.ddit.vo.TrainingVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/")
public class ClassController {
	//강의 관련
	
	// 강의 개설 신청
	// 강의 목록
	// 강의 상세
	
	//내 강의 목록
	//수강 시간표 조회
	//성적 조회
	
	// 과제 목록
	// 과제 상세
	// 과제 생성
	// 과제 수정
	// 교수 기준 과제 제출 목록
	// 교수 기준 과제 제출 상세
	// 과제 점수 등록
	
	
	// 온라인 시험 목록
	// 온라인 시험 응시
	// 온라인 시험 제출
	// 온라인 시험 결과
	// 온라인 시험 출제
	// 시험 점수 등록?

	//현장실습 신청
	// 현장실습 목록
	
	// 강의 평가
	// 강의 평가 결과

	// 성적 조회
	// 성적 입력
	// 성적 등록
	// 성적 정정(이의) 신청 목록
	// 성적 정정 허가/반려
	
	// 회원 출결 목록
	// 강의 출결 목록
	// 강의 출결 등록
	
	
	// 이 밑으로 구현 ============================================

	@Inject
	private IClassService classService;
	
	//내 강의 리스트
	@GetMapping("/student/class/myClassList.do")
	public String myClassList(Model model, HttpServletRequest res) {
		
		//테스트용
		int memNo = 1;
		
		List<MyClassVO> mylectureList = classService.getMyLectureList(memNo);
		model.addAttribute("mylectureList", mylectureList);
		
		return "student/myClassList";
	}
	
	
	// 학생 강의  화면
	@GetMapping("/student/class/classRoom/{classNo}")
	public String stdClassRoom(Model model, @PathVariable int classNo) {
		log.debug("classNo"+classNo );
		
		//테스트용
		int memNo = 1;
		
		//내 강의 정보
		MyClassVO myClassVO = classService.getMyLecture(classNo);
		model.addAttribute("myClassVO", myClassVO);
		
		//강의자료실
		List<ClassBoardVO> classBoardList = classService.getClassBoardList(classNo);
		model.addAttribute("classBoardList", classBoardList);
		
		//강의 과제
		List<HomeworkVO> homeworkList = classService.getHomeworkList(classNo);
		model.addAttribute("homeworkList", homeworkList);
		
		//온라인 시험
		List<ExampleVO> exampleList = classService.getExampleList(classNo);
		
		model.addAttribute("exampleList", exampleList);
		
		//현장실습
		List<TrainingVO> trainingList = classService.getTrainingList(classNo);
		model.addAttribute("trainingList", trainingList);
		
		//강의 평가
		
		
		return "student/classRoom";
	}
	
	
	// 학생 강의 과제
	@GetMapping("/student/class/classHomeWork/{classNo}")
	public String classHomeWork(Model model, @PathVariable int classNo) {
		log.debug("classNo"+classNo );
		return "student/classHomeWork";
	}
	
	
	//현장학습
	@GetMapping("/student/class/classTraining/{classNo}")
	public String classTraining(Model model, @PathVariable int classNo) {
		log.debug("classNo"+classNo );
		return "student/classTraining";
	}
	

	// 비동기 처리  ============================================
	
	/* 강의 자료실 Detail */
	@ResponseBody
	@GetMapping("/getClassBoardDetail.do")
	public ClassBoardVO getClassBoardDetail(int classBrdNo) {
		
		log.debug("classBrdNo"+ classBrdNo);
		
		ClassBoardVO classBoardVO = classService.getClassBoard(classBrdNo);
		
		log.debug("classBoardVO"+ classBoardVO);
		
		return classBoardVO;
	}
	
	///////////////////// 교수 강의 관련
	
	// 강의 목록
	@GetMapping("/professor/classOpenList.do")
	public String ClassOpenList(
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage,
			@RequestParam(required = false, defaultValue = "className") String searchType,
			@RequestParam(required = false) String searchWord,
			HttpServletRequest request,
			Model model) {
		
		log.debug("요기 와야 해용!");
		
		/// 값 부여
		PaginationVO<ClassVO> pagingVO = new PaginationVO<ClassVO>();
		
		System.out.println("searchType" + searchType);
		System.out.println("searchWord" + searchWord);
		
		if(StringUtils.isNotBlank(searchWord)) {
			pagingVO.setSearchType(searchType);
			pagingVO.setSearchWord(searchWord);
			model.addAttribute("searchType", searchType);
			model.addAttribute("searchWord", searchWord);
		}
		
		pagingVO.setCurrentPage(currentPage);
		
		HttpSession session = request.getSession();
		MemberVO memberVO = (MemberVO) session.getAttribute("member");
		
		if (memberVO == null) {
			return "redirect:/login.do";
		}
		
		int memNo = memberVO.getMemNo();
		
		System.out.println("memNo" + memNo);
		
		
		/// 서비스(로그인한 교수의 모든 강의 가져오기)
		// 총 게시글 수 가져오기 
		int totalRecord = classService.classOpenCnt(pagingVO, memNo);
		pagingVO.setTotalRecord(totalRecord); 
		// 총 목록 가져오기 
		List<ClassVO> dataList = classService.classOpenList(pagingVO, memNo); 
		pagingVO.setDataList(dataList);
		 
		 /// 값 주기 
		model.addAttribute("pagingVO", pagingVO);
		return "professor/classOpenList";
	
	}
	// 강의 개설
	@RequestMapping(value="/professor/newClassOpen.do", method=RequestMethod.GET)
	public String newClassOpen() {
		return "professor/newClassOpen";
	}
	
	// 수업 관리 메인
	@RequestMapping(value="/professor/classRoom.do", method=RequestMethod.GET)
	public String proClassRoom() {
		return "professor/classRoom";
	}
	
	// 강의 시간표
	@GetMapping("/student/class/classSchedule.do")
	public String classSchedule(Model model) {
		return "student/classSchedule";
	}
	
}
