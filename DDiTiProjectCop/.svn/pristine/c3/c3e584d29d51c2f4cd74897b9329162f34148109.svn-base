<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.IMemberMapper">
<!-- 성적 조회  restuleMap -->
	<resultMap type="MemberStdVO" id="MemberStdMap">
		<id property="memNo" column="mem_no"/>	
		<result property="memNo" column="mem_no"/>
		<result property="dprtNo" column="dprt_no"/>
		<result property="memName" column="mem_name"/>
		
		<association property="studentInfoVO" javaType="StudentInfoVO">
			<result property="memRegDate" column="mem_reg_date"/>
			<result property="memGrdDate" column="mem_grd_date"/>
			<result property="memStatusCode" column="mem_status_code"/>
			<result property="memStdGrade" column="mem_std_grade"/>
		</association>
		
		<association property="departmentVO" javaType="DepartmentVO">
			<result property="dprtName" column="dprt_name"/>
			<result property="dprtCategory" column="dprt_category"/>
		</association>
		
		<collection property="classList" resultMap="classListMap"/>
		<collection property="listenerList" resultMap="listenerMap"></collection>
		<collection property="lectureScoreList" resultMap="lectureScoreMap"></collection>
	</resultMap>
	
	<resultMap type="ClassVO" id="classListMap">
		<id property="memNo" column="mem_no"/>
		<result property="semester" column="semester"/>
		<result property="lecPoint" column="lec_point"/>
	</resultMap>
	
	<resultMap type="ListenerVO" id="listenerMap">
		<id property="memNo" column="mem_no"/>
		<result property="classScore" column="class_score"/>
	</resultMap>
	
	<resultMap type="LectureScoreVO" id="lectureScoreMap">
		<id property="memNo" column="mem_no"/>
		<result property="lecScr" column="lec_scr"/>
	</resultMap>
	
<!-- 성적 조회  restuleMap -->
	
	
	
	<!-- 학생 조회 -->
	<select id="newStuList" resultType="MemberVO">
		select
		    m.mem_no, 
		    dprt_no, 
		    mem_id, 
		    mem_pw, 
		    mem_name,
		    si.mem_reg_date, 
		    si.mem_std_grade, 
		    si.mem_status_code
		from member m left outer join student_info si on(m.mem_no = si.mem_no)
		where m.mem_role = 'ROL001'
	</select>
	
	<!-- 교수 조회 -->
	<select id="proList" resultType="MemberVO">
		select
			m.mem_no,
			dprt_no,
			mem_id,
			mem_pw,
			mem_name,
			mem_role,
			pr.mem_join_date as memJoinDate,
			pr.mem_out_date,
			pr.mem_pro_code
		from member m left outer join professor_info pr on(m.mem_no = pr.mem_no)
		where m.mem_role = 'ROL002'
	</select>
	
	<insert id="excelUpload" parameterType="hashMap"> 
		<selectKey keyProperty="memNo" resultType="int" order="BEFORE"> 
			select member_seq.nextval from dual 
		</selectKey> 
		INSERT INTO member 
		( 
			mem_no
			, dprt_no
			, mem_id
			, mem_pw
			, mem_name
			, mem_gen
			, mem_bir
			, mem_ph
			, mem_email
			, mem_postcode
			, mem_addr1
			, mem_addr2
		) VALUES ( 
			#{memNo}
			, TO_NUMBER(#{dprtNo})
			, #{year} || LPAD(#{dprtNo}, 2, '0') || LPAD(#{memNo }, 4, '0')
			, 'java'
			, #{A}
			, #{C}
			, #{D}
			, #{E}
			, #{F}
			, #{G}
			, #{H}
			, #{I}
		)
	</insert>
	
	<!-- 멤버 생성 -->
	<insert id="createMember" parameterType="MemberVO">
		<selectKey keyProperty="memNo" resultType="int" order="BEFORE">
			select member_seq.nextval from dual
		</selectKey>
		INSERT
	    INTO member
	    (
	        mem_no,
	        dprt_no,
	        mem_id,
	        mem_pw,
	        mem_name,
	        mem_gen,
	        mem_bir,
	        mem_ph,
	        mem_email,
	        mem_postcode,
	        mem_addr1,
	        mem_addr2,
	        mem_role
	    ) values (
	        #{memNo},
	        to_number(#{dprtNo}),
	        #{year} || LPAD(#{dprtNo}, 2, '0') || LPAD(#{memNo }, 4, '0'),
	        #{memPw},
	        #{memName},
	        #{memGen},
	        #{memBir},
	        #{memPh},
	        #{memEmail},
	        #{memPostcode},
	        #{memAddr1},
	        #{memAddr2},
	        #{memRole}
	    )
	</insert>
	<!-- 교수계정 생성 -->
	<insert id="createProID" parameterType="ProfessorInfoVO">
		insert 
	    into professor_info(
	        mem_no,
	        mem_join_date,
	        mem_pro_code
	    )values(
	        #{memNo},
	        #{memJoinDate},
	        'MPR002'
		)
	</insert>
	<!-- 단과대학 리스트 -->
	<select id="departmentList" resultType="DepartmentVO">
		select
		    dprt_no,
		    dprt_name,
		    dprt_category,
		    dprt_tuition,
		    dprt_srv_time,
		    dprt_lec_point,
		    sem_max_lec_point
		from department
	</select> 
	<!-- 단과대학 선택 -->
	<select id="selectDprt" resultType="DepartmentVO">
		select
		    dprt_no,
		    dprt_name,
		    dprt_category
		from department
		where dprt_category = #{dprtCategory}
	</select>

	 <!-- 학생 계정 생성 -->
	<!--  
	<insert id="">
		<selectKey keyProperty="memNo" resultType="int" order="BEFORE">
			select seq_board.nextval from dual
		</selectKey>
		INSERT ALL
		    INTO member
		    (
		        mem_no,
		        dprt_no,
		        mem_id,
		        mem_pw,
		        mem_name,
		        mem_gen,
		        mem_bir,
		        mem_ph,
		        mem_email,
		        mem_postcode,
		        mem_addr1,
		        mem_addr1,
		        mem_role
		    ) values (
		        #{memNo},
		        1,
		        ${memId},
		        ${memPw},
		        ${memName},
		        ${memGen},
		        ${memBir},
		        ${memPh},
		        ${memEmail},
		        ${memPostcode},
		        ${memAddr1},
		        ${memAddr2},
		        'ROL002'
		   )INTO student_info
			(
				MEM_NO,
				MEM_REG_DATE,
				MEM_STATUS_CODE,
				MEM_STD_GRADE
			) 
			values(
				50,
				sysdate,
				'MEM001',
				1
			)
		select * from dual;
	</insert>
	 -->


<!-- 졸업 증명서   -->
	<select id="gradCrtDetail" resultType="MemberStdVO">
	  select
		    m.mem_no,
		    m.dprt_no,
		    m.mem_id,
		    m.mem_pw,
		    m.mem_name,
		    m.mem_gen,
		    m.mem_bir,
		    m.mem_ph,
		    m.mem_email,
		    m.mem_postcode,
		    m.mem_addr1,
		    m.mem_addr2,
		    m.otp_key,
		    m.mem_profile,
		    m.mem_nation_code,
		    m.mem_temp_pw,
		    m.mem_role,
		    s.mem_reg_date,
		    s.mem_grd_date,
		    s.mem_status_code,
		    s.mem_std_grade,
		    t.dprt_name,
		    t.dprt_category
		from
		    member m,
		    department t,
		    student_info s
		where
		    m.mem_no = s.mem_no
		    and t.dprt_no = m.dprt_no
		    and s.mem_status_code = 'MEM004'

		SELECT
		    m.mem_no,
		    m.dprt_no,
		    m.mem_id,
		    m.mem_pw,
		    m.mem_name,
		    m.mem_gen,
		    m.mem_bir,
		    m.mem_ph,
		    m.mem_email,
		    m.mem_postcode,
		    m.mem_addr1,
		    m.mem_addr2,
		    m.otp_key,
		    m.mem_profile,
		    m.mem_nation_code,
		    m.mem_temp_pw,
		    m.mem_role,
		    s.mem_reg_date,
		    s.mem_grd_date,
		    s.mem_status_code,
		    s.mem_std_grade,
		    t.dprt_name,
		    t.dprt_category
		FROM
		    member m,
		    department t,
		    student_info s
		WHERE
		    m.mem_no = s.mem_no
		    AND t.dprt_no = m.dprt_no
		    AND s.mem_status_code = 'MEM004'

	</select>
	
		<!-- 재학 증명서   -->
 	<select id="schCrtDetail" resultType="MemberStdVO">
		   select
			    m.mem_no,
			    m.dprt_no,
			    m.mem_id,
			    m.mem_pw,
			    m.mem_name,
			    m.mem_gen,
			    m.mem_bir,
			    m.mem_ph,
			    m.mem_email,
			    m.mem_postcode,
			    m.mem_addr1,
			    m.mem_addr2,
			    m.otp_key,
			    m.mem_profile,
			    m.mem_nation_code,
			    m.mem_temp_pw,
			    m.mem_role,
			    s.mem_reg_date,
			    s.mem_grd_date,
			    s.mem_status_code,
			    s.mem_std_grade,
			    t.dprt_name,
			    t.dprt_category
			from
			    member m,
			    department t,
			    student_info s
			where
			    m.mem_no = s.mem_no
			    and t.dprt_no = m.dprt_no
			    and s.mem_status_code = 'MEM001'
	</select> 

<!-- 성적 증명서  -->
	<select id="scoreCrtDetail" resultMap="MemberStdMap">
		SELECT
		    m.mem_no,
		    m.dprt_no,
		    m.mem_name,
		    s.mem_reg_date,
		    s.mem_grd_date,
		    s.mem_status_code,
		    s.mem_std_grade,
		    t.dprt_name,
		    t.dprt_category,
		    c.LEC_POINT, -- 추가된 열
		
		    c.semester,
		    l.class_score,
		    ls.lec_scr
		   
		FROM
		    member m,
		    department t,
		    student_info s,
		    class c, 
		    listener l,
		    lecture_score ls
		WHERE
		    m.mem_no = s.mem_no
		    AND t.dprt_no = m.dprt_no
		    AND s.mem_status_code = 'MEM001'
		    AND m.mem_no = l.mem_no
		    and l.class_no = c.class_no
		    and ls.mem_no = l.mem_no
		    and ls.LISTEN_NO = l.LISTEN_NO
		    and m.mem_no = '1'
	</select>
	

</mapper>