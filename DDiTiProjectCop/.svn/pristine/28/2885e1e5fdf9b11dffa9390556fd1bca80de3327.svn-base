<%@ page language="java" contentType="text/html; charset=UTF-8"
pageEncoding="UTF-8"%>
<div id="chat-box-body">
  <div
    id="chat-circle"
    class="waves-effect waves-circle btn btn-circle btn-lg btn-warning l-h-70"
  >
    <div id="chat-overlay"></div>
    <span class="icon-Group-chat fs-30"
      ><span class="path1"></span><span class="path2"></span
    ></span>
  </div>

  <div class="chat-box">
    <div
      class="chat-box-header p-15 d-flex justify-content-between align-items-center"
    >
      <div class="flex-grow-1">
        <div class="text-dark fs-18">
          <strong>음성인식 비서, DDiTi</strong>
        </div>
        <div>
          <span class="badge badge-sm badge-dot badge-primary"></span>
          <span class="text-muted fs-12">ACTIVE</span>
        </div>
      </div>
      <div class="chat-box-toggle">
        <a
          id="chat-box-toggle"
          class="waves-effect waves-circle btn btn-circle btn-danger-light h-40 w-40 rounded-circle l-h-45"
        >
          <span class="icon-Close fs-22"
            ><span class="path1"></span><span class="path2"></span
          ></span>
        </a>
      </div>
    </div>
    <div class="chat-box-body">
      <div class="chat-box-overlay"></div>
      <div class="chat-logs">
        <!-- 비서말풍선 시작 -->
        <%--
        <div class="chat-msg user">
          <div class="d-flex align-items-center">
            <span class="msg-avatar">
              <img
                src="${pageContext.request.contextPath}/resources/images/avatar/2.jpg"
                class="avatar avatar-lg"
              />
            </span>
            <div class="mx-10">
              <a href="#" class="text-dark hover-primary fw-bold"
                >Mayra Sibley</a
              >
              <p class="text-muted fs-12 mb-0">2 Hours</p>
            </div>
          </div>
          <div class="cm-msg-text">Hi there, I'm Jesse and you?</div>
        </div>
        --%>
        <!-- 비서말풍선 끝 -->
        <!-- 내 말풍선 시작 -->
        <%--
        <div class="chat-msg self">
          <div class="d-flex align-items-center justify-content-end">
            <div class="mx-10">
              <a href="#" class="text-dark hover-primary fw-bold">You</a>
              <p class="text-muted fs-12 mb-0">3 minutes</p>
            </div>
            <span class="msg-avatar">
              <img
                src="${pageContext.request.contextPath}/resources/images/avatar/3.jpg"
                class="avatar avatar-lg"
              />
            </span>
          </div>
          <div class="cm-msg-text">Nice to meet you too, Jesse. I'm John.</div>
        </div>
        --%>
        <!-- 내 말풍선 끝 -->
      </div>
      <!--chat-log -->
    </div>
    <div class="chat-input">
      <!-- UI 전송 -->
        <input
          type="text"
          id="chat-input"
          placeholder="마이크 버튼을 누르면 음성인식이 작동합니다."
          value=""
        />
        <button onclick="sendSpeech();" type="button" class="btn btn-circle btn-primary btn-sm"
          style=" bottom: 8px; right: 8px; width: 30px; height: 30px; line-height: 30px;">
          <i class="mdi mdi-microphone"></i>
        </button>
        <button type="button"  class="btn chat-submit" hidden id="chat-submit" ></button>
      
    </div>
  </div>
</div>

<script type="text/javascript">
  var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;
  var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;
  var SpeechRecognitionEvent =
    SpeechRecognitionEvent || webkitSpeechRecognitionEvent;
  var diagnosticPara = document.querySelector(".output");

  function sendSpeech() {
    var recognition = new SpeechRecognition();
    var speechRecognitionList = new SpeechGrammarList();
    recognition.grammars = speechRecognitionList;
    recognition.lang = "ko-KR";
    recognition.interimResults = false; // true: 중간 결과를 반환, false: 최종 결과만 반환
    recognition.continious = false; // true: 음성인식을 계속해서 수행, false: 음성인식을 한번만 수행
    recognition.maxAlternatives = 1;

    recognition.start();

    //음성인식의 결과를 텍스트로 반환
    recognition.onresult = function (event) {
      var speechResult = event.results[0][0].transcript.toLowerCase();
      console.log("Confidence: " + event.results[0][0].confidence);
      console.log("Speech Result: " + speechResult);
      //diagnosticPara.textContent = 'Speech received: ' + speechResult + '.';
      var chartInputVal = $("#chat-input").val(speechResult);
      $("#chat-submit").trigger("click");
    };

    recognition.onaudiostart = function (event) {
      //Fired when the user agent has started to capture audio.
      //오디오 캡처를 시작하면 실행
      console.log("SpeechRecognition.onaudiostart");
      $("#chat-input").attr("placeholder", "지금 말씀하세요 !");
    };

    recognition.onaudioend = function (event) {
      //Fired when the user agent has finished capturing audio.
      //오디오 캡처를 완료하면 실행
      console.log("SpeechRecognition.onaudioend");
    };

    recognition.onend = function (event) {
      //Fired when the speech recognition service has disconnected.
      //음성 인식 서비스의 연결이 끊어지면 실행
      console.log("SpeechRecognition.onend");
      $("#chat-input").attr(
        "placeholder",
        "마이크 버튼을 누르면 음성인식이 작동합니다."
      );
    };

    recognition.onnomatch = function (event) {
      //Fired when the speech recognition service returns a final result with no significant recognition.
      //This may involve some degree of recognition, which doesn't meet or exceed the confidence threshold.
      //음성 인식 서비스가 중요한 인식 없이 최종 결과를 반환하면 실행
      //여기에는 신뢰도 임계값을 충족하거나 초과하지 않는 어느 정도의 인식이 포함될 수 있습니다.
      //(인식률이 낮아 신뢰도가 낮을수 있는 결과를 반환 했을 때)
      console.log("SpeechRecognition.onnomatch");
    };

    recognition.onsoundstart = function (event) {
      //Fired when any sound — recognisable speech or not — has been detected.
      //소리가 감지되면 실행
      console.log("SpeechRecognition.onsoundstart");
    };

    recognition.onsoundend = function (event) {
      //Fired when any sound — recognisable speech or not — has stopped being detected.
      //소리 감지가 중지되면 실행
      console.log("SpeechRecognition.onsoundend");
    };

    recognition.onspeechstart = function (event) {
      //Fired when sound that is recognised by the speech recognition service as speech has been detected.
      //음성으로 인식된 소리가 감지되면 실행
      console.log("SpeechRecognition.onspeechstart");
    };
    recognition.onstart = function (event) {
      //Fired when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current SpeechRecognition.
      //SpeechRecognition과 관련된 텍스트로 인식하기 위한 오디오를 듣기 시작하면 실행
      console.log("SpeechRecognition.onstart");
    };
  }

  function f_ajax() {
    $.ajax({
      type: "post",
    });
  }
</script>
