package kr.or.ddit.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.vo.MemberVO;
import lombok.extern.slf4j.Slf4j;


@RequestMapping("/")
@Controller
@Slf4j
public class LoginController {
	//로그인 및 회원 정보 관련

	// 로그인 + OTP + 리캡챠
	// 로그아웃
	// 회원가입
	// 아이디 중복 체크
	// 아이디 찾기
	
	// 비밀번호 찾기 
	// 개인정보 수정
	// OTP 발급
	
	
	
	// 이 밑으로 구현 ============================================
	
	
	@GetMapping("/login.do")
	public String LoginForm() {
		log.info("LoginForm() run...");
		return "login";
	}
	
	// 로그인 + OTP + 리캡챠
	@PostMapping("/login.do")
	public String Login(Model model, MemberVO memberVO) {
		log.info("login() run...");
		log.info(memberVO.toString());
		
		//아이디 검증
		
		//아이디 기억 체크 확인
		
		//회원 타입 검증  (학생, 교수, 교직원)
		
		return "test/test001";
	}
	
	// 아이디 찾기 폼
	@RequestMapping(value="/findId.do" ,method = RequestMethod.GET)
	public String findIdForm() {
		return "/findId";
	}
	
	// 비밀번호 찾기 폼
	@RequestMapping(value="/findPw.do" ,method = RequestMethod.GET)
	public String findPwForm() {
		return "/findPw";
	}
	
	// 아이디 찾기 
	@ResponseBody
	@RequestMapping(value = "/findId", method = RequestMethod.POST)
	public ResponseEntity<String> findId(MemberVO memberVO) {
		
		String msg = "";
		
		//이름 이메일 확인
			// 불일치시 전송 메시지 설정
			
		//이메일 전송
		
		return new ResponseEntity<String>(msg, HttpStatus.OK);
	}
	
	// 비밀번호 찾기
	@ResponseBody
	@RequestMapping(value = "/findPw", method = RequestMethod.POST)
	public ResponseEntity<String> findPw(MemberVO memberVO) {
		
		String msg = "";
		
		//아이디 이름 이메일 확인
			// 불일치시 전송 메시지 설정
			
		//이메일 전송
		
		return new ResponseEntity<String>(msg, HttpStatus.OK);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
