<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>

<body class="col-12 row hold-transition light-skin sidebar-mini theme-primary fixed">
	<div class="col-6" style="" id="chartBody">
		<%-- <div class="box">
			<div class="box-body">
				<h4 class="box-title">Pie Chart</h4>
				<div>
					<canvas id="pie-chart" height="200"></canvas>
				</div>
			</div>
		</div> --%>
	</div>
	
	
	<div class="col-6">
		
		
	</div>
</body>

<script src="${pageContext.request.contextPath}/resources/assets/vendor_components/chart.js-master/Chart.min.js"></script>
<script>

var srvNo = parseInt("${srvNo }");

$(function () {
	
	$.ajax({
		type: "get",
		url : "/DYUniv/surveyDetail.ajax?srvNo="+srvNo,
		contentType : "application/json; charset=utf-8",
		success : function(res){
			console.log(res);
			
			if(res == null || res.length == 0){
				// alert("일치하는 정보가 없습니다...")
				Swal.fire({
					icon: 'error',
					title: '잘못된 접근입니다.', 
					text: '',
			    });
		 		location.href = "/DYUniv/surveyResult.do";
		 	} else {
		 		srvChart(res);
		 	}
		}

	});
	
})

function srvChart(srv) {
	
	var qstList = srv.srvQstList;
	
	var resList = srv.srvResultList;
	
	var srvRegCount = srv.srvRegCount;
	
	for (var i = 0; i < qstList.length; i++) {
		var qst = qstList[i].srvQst;
		var srvQstNo = qstList[i].srvQstNo;
		var chList = qstList[i].srvQstChList
		var qstData = [];
		
		for (var j = 0; j < chList.length; j++) {
			var str = chList[j].chNo +". "+ chList[j].chStr;
			var data = {
					chStr : str,
					cnt : 0
			}
			qstData.push(data);
		}
		
		console.log("qstData : ", qstData);
		
		//질문마다 데이터 뽑기
		//응답 데이터 없을때 처리할것 !!!!!!!!!!!!!!!!!!!!!
		
		for (var j = 0; j < resList.length; j++) {
			var chStr = resList[j].chList;
			
			if(srvQstNo == resList[j].srvQstNo){
				var ans = resList[j].svrResAns;
				console.log("ans :", ans);
				qstData[ans-1].cnt += 1;
			}
		}
		
		//console.log("qstData : ", qstData);
		
		// 차트 생성
		createChart(qstData, qst, qstList[i].qstNo);
	}
}

function createChart(chartData, qstName, qstNo) {
	
	var code = '<div class="box">	<div class="box-body">	<h4 class="box-title">'+ qstName +'</h4>'
				+'<div> <canvas id="pie-chart' + qstNo +'" height="200"></canvas>	</div></div></div>'
	$("#chartBody").append(code);
	
				
	var ctx = document.getElementById("pie-chart"+qstNo).getContext("2d");
	var chartLabels = [];
	var srvChartData = [];
	var chartBgColor = [];
	
	for (var i = 0; i < chartData.length; i++) {
		chartLabels.push(chartData[i].chStr);
		srvChartData.push(chartData[i].cnt);
		chartBgColor.push(getRandomColor());
	}
	
	var data = {
		 labels: chartLabels,
		datasets: [
			{
			data: srvChartData,
			backgroundColor: chartBgColor
			//hoverBackgroundColor: []
		}]
	}
	
	//console.log("chart Data : ",data)
	
	var pieChart  = new Chart(ctx,{
		type: 'pie',
		data: data,
		options: {
			animation: {
				duration:	1000
			},
			responsive: true,
			legend: {
				labels: {
				fontFamily: "Nunito Sans",
				fontColor:"#878787"
				}
			},
			tooltip: {
				backgroundColor:'rgba(33,33,33,1)',
				cornerRadius:0,
				footerFontFamily:"'Nunito Sans'"
			},
			elements: {
				arc: {
					borderWidth: 0
				}
			}
		}
	});
}

function getRandomColor() {
	var color = Math.floor(Math.random() * 127 + 128).toString(16);
	color += Math.floor(Math.random() * 127 + 128).toString(16);
	color += Math.floor(Math.random() * 127 + 128).toString(16);
	return "#"+color;
}
</script>
























