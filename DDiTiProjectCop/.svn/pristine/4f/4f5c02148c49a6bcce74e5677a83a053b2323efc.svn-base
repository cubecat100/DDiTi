package kr.or.ddit.controller;

import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.or.ddit.service.IExcelService;
import kr.or.ddit.vo.ExcelVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/excel")
public class ExcellController {

	@Inject
	private IExcelService excelService;
	
	@RequestMapping(value="/test/0001", method = RequestMethod.GET)
	public String excelList(Model model) {
		List<ExcelVO> excelList = excelService.selectExcelList();
		model.addAttribute("list", excelList);
		return "employer/exceldown";
	}

	@RequestMapping(value = "/exceldownload", method = RequestMethod.POST)
	public void excelDownload(HttpServletRequest request, HttpServletResponse response, ExcelVO excelVO, Model model) throws IOException {
	    Workbook wb = new XSSFWorkbook();
	    Sheet sheet = wb.createSheet("첫번째 시트");
	    Row row;
	    Cell cell;
	    int rowNum = 0;

	    row = sheet.createRow(rowNum++);
	    cell = row.createCell(0);
	    cell.setCellValue("번호");
	    cell = row.createCell(1);
	    cell.setCellValue("아이디");
	    cell = row.createCell(2);
	    cell.setCellValue("패스워드");
	    cell = row.createCell(3);
	    cell.setCellValue("이름");

	    List<ExcelVO> dataList = excelService.selectExcelList(); 
	    for (ExcelVO data : dataList) {
	        row = sheet.createRow(rowNum++);
	        cell = row.createCell(0);
	        cell.setCellValue(data.getExcelNo()); 
	        cell = row.createCell(1);
	        cell.setCellValue(data.getUserId()); 
	        cell = row.createCell(2);
	        cell.setCellValue(data.getPassword()); 
	        cell = row.createCell(3);
	        cell.setCellValue(data.getUserName());
	    }

	    response.setContentType("ms-vnd/excel");
	    response.setHeader("Content-Disposition", "attachment;filename=example.xlsx");

	    wb.write(response.getOutputStream());  

	}
	
	
	
	
	
	@ResponseBody
	@RequestMapping(value = "/excelUpload.do", method = RequestMethod.POST)
	public Map<String, String> excelUploadAjax(MultipartHttpServletRequest request) throws Exception{
	    Map<String, String> result = new HashMap<String, String>();
	    MultipartFile excelFile = request.getFile("excelFile");

	    try { 
	        if(excelFile != null || !excelFile.isEmpty()) {
	            result.put("code", "1");
	            result.put("msg", "업로드 성공");

	            File destFile = new File("C:\\upload\\"+excelFile.getOriginalFilename()); // 파일위치 지정
	            excelFile.transferTo(destFile); // 엑셀파일 생성
	            excelService.excelUpload(destFile); // service단 호출
	            destFile.delete(); // 업로드된 엑셀파일 삭제
	        }else {
	            result.put("code", "0");
	            result.put("msg", "업로드 실패");
	        }
	    }catch(Exception e) {
	        e.printStackTrace();
	    } 
	    return result;
	}
	
	

}
